name <- tail(strsplit(filename, '/')[[1]], n=1)
xs = 1:dim(neuron[['trial_raster']])[2]
dirs <- neuron[['samp_direction_this_trial']]
sort_dirs <- sort(dirs, index.return=TRUE)
order_inds <- sort_dirs$ix
dirs <- sort_dirs$x
udirs <- sort(unique(dirs))
raw_spks <- neuron[['trial_raster']]
spks <- ts(t(raw_spks[order_inds, ]), xs[1], xs[length(xs)],
frequency=1)
neur <- list(name=name, dirs=dirs, udirs=udirs, spks=spks)
neur
}
source('source_neuro_workshop_functions.R')
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size)
count_start <- 800
count_end <- 1200
get_direction_tuning(mt_neuron_path, count_start + stim_onset,
count_end + stim_onset)
category_bound <- 135
lip_neuron_folder <- '../data/LIP/'
lip_neuron_name <- 'dhbbg05.mat'
lip_neuron_path <- paste(lip_neuron_folder, lip_neuron_name,
sep='')
count_start <- 750
count_end <- 1500
get_direction_tuning(lip_neuron_path, count_start + stim_onset,
count_end + stim_onset, category_bound)
count_start <- 100
count_end <- 600
get_category_index(lip_neuron_path, category_bound,
count_start + stim_onset, count_end + stim_onset)
lip_ci <- get_ci_dist(lip_neuron_folder, category_bound,
count_start + stim_onset, count_end + stim_onset)
mt_ci <- get_ci_dist(mt_neuron_folder, category_bound,
count_start + stim_onset, count_end + stim_onset)
library(plyr)
d <- data.frame(region=factor(c(rep("LIP", length(lip_ci)),
rep("MT", length(mt_ci)))),
ci=c(lip_ci, mt_ci))
mean_dat <- ddply(d, "region", summarise, ci.mean=mean(ci))
ggplot(d, aes(x=ci, fill=region)) +
geom_histogram(binwidth=.125, alpha=.5, position="identity") +
geom_vline(data=mean_dat, aes(xintercept=ci.mean, colour=region),
linetype="dashed", size=1) +
xlab('category tuning index') +
ylab('number of neurons')
str(c('LIP, p-value ', t.test(lip_ci)$p.value))
str(c('MT, p-value ', t.test(mt_ci)$p.value))
lip2_neuron_folder <- '../data/LIP2/'
category_bound2 <- ensure_angle(category_bound + 90)
lip2_ci_perp <- get_ci_dist(lip2_neuron_folder, category_bound,
count_start + stim_onset,
count_end + stim_onset)
lip2_ci_cong <- get_ci_dist(lip2_neuron_folder, category_bound2,
count_start + stim_onset,
count_end + stim_onset)
d <- data.frame(region=factor(c(rep("LIP2 perp", length(lip2_ci_perp)),
rep("LIP2 cong", length(lip2_ci_cong)))),
ci=c(lip2_ci_perp, lip2_ci_cong))
mean_dat <- ddply(d, "region", summarise, ci.mean=mean(ci))
ggplot(d, aes(x=ci, fill=region)) +
geom_histogram(binwidth=.125, alpha=.5, position="identity") +
geom_vline(data=mean_dat, aes(xintercept=ci.mean, colour=region),
linetype="dashed", size=1) +
xlab('category tuning index') +
ylab('number of neurons')
str(c('LIP original bound, p-value ', t.test(lip2_ci_perp)$p.value))
str(c('LIP new bound, p-value ', t.test(lip2_ci_cong)$p.value))
count_start <- 750
count_end <- 1500
get_direction_tuning(lip_neuron_path, count_start + stim_onset,
count_end + stim_onset, category_bound)
plot_PSTH_neuron(lip_neuron_path,filter_size)
knitr::opts_chunk$set(
eval      = TRUE,
comment   = "#",
results   = "hold",
# collapse  = TRUE,
fig.align = "center")
knitr::include_graphics("../figs/category_bounds.png")
knitr::include_graphics("../figs/task_schematic.png")
knitr::include_graphics("../figs/bhv_performance.png")
knitr::include_graphics("../figs/dv-lehky-sereno-dorsalonly.png")
knitr::include_graphics("../figs/action_potential.png")
library(rmatio)
mt_neuron_folder <- '../data/MT/'
mt_neuron_path <- '../data/MT/dseao01.mat'
mt_neuron <- read.mat(mt_neuron_path)
str(mt_neuron)
library(ggplot2)
# the stimulus starts 500ms after the beginning of each trial
stim_onset = 500
mt_raster <- mt_neuron[['trial_raster']]
# Find all the (time bin, trial) pairs in which there were spikes.
# We'll use the `which` function to find the values where the raster
# contains spikes (a value of '1' in the raster matrix), and we'll use
# `arr.ind` (which means 'array indices') to report back where in the
# matrix those values of '1' were found.
spkpairs = which(mt_raster == 1, arr.ind=TRUE)
qplot(spkpairs[ , 2] - stim_onset, spkpairs[ , 1],
xlab='time from stimulus onset (ms)',
ylab='trial')
dirs <- mt_neuron[['samp_direction_this_trial']]
unique_dirs <- unique(dirs)
print(unique_dirs)
choose_dir <- 240
dir_raster <- mt_raster[dirs == choose_dir,]
dir_spks <- which(dir_raster == 1, arr.ind=TRUE)
qplot(dir_spks[ , 2] - stim_onset, dir_spks[ , 1],
xlab='time from stimulus onset (ms)',
ylab='trial')
sort_dirs <- sort(dirs, index.return=TRUE)
order_inds <- sort_dirs$ix
s_dirs <- sort_dirs$x
ordered_raster <- mt_raster[order_inds, ]
sorted_spkpairs <- which(ordered_raster == 1, arr.ind=TRUE)
dfact <- factor(s_dirs[sorted_spkpairs[, 1]], levels=unique(s_dirs))
qplot(sorted_spkpairs[ , 2] - stim_onset, sorted_spkpairs[ , 1],
color=dfact, xlab='time from stimulus onset (ms)',
ylab='trial') +
labs(color='motion direction (degrees)')
read_neuron <- function(filename) {
neuron <- read.mat(filename)
name <- tail(strsplit(filename, '/')[[1]], n=1)
xs = 1:dim(neuron[['trial_raster']])[2]
dirs <- neuron[['samp_direction_this_trial']]
sort_dirs <- sort(dirs, index.return=TRUE)
order_inds <- sort_dirs$ix
dirs <- sort_dirs$x
udirs <- sort(unique(dirs))
raw_spks <- neuron[['trial_raster']]
spks <- ts(t(raw_spks[order_inds, ]), xs[1], xs[length(xs)],
frequency=1)
neur <- list(name=name, dirs=dirs, udirs=udirs, spks=spks)
neur
}
source('source_neuro_workshop_functions.R')
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size)
count_start <- 800
count_end <- 1200
get_direction_tuning(mt_neuron_path, count_start + stim_onset,
count_end + stim_onset)
category_bound <- 135
lip_neuron_folder <- '../data/LIP/'
lip_neuron_name <- 'dhbbg05.mat'
lip_neuron_path <- paste(lip_neuron_folder, lip_neuron_name,
sep='')
count_start <- 100
count_end <- 600
get_category_index(lip_neuron_path, category_bound,
count_start + stim_onset, count_end + stim_onset)
lip_ci <- get_ci_dist(lip_neuron_folder, category_bound,
count_start + stim_onset, count_end + stim_onset)
mt_ci <- get_ci_dist(mt_neuron_folder, category_bound,
count_start + stim_onset, count_end + stim_onset)
library(plyr)
d <- data.frame(region=factor(c(rep("LIP", length(lip_ci)),
rep("MT", length(mt_ci)))),
ci=c(lip_ci, mt_ci))
mean_dat <- ddply(d, "region", summarise, ci.mean=mean(ci))
ggplot(d, aes(x=ci, fill=region)) +
geom_histogram(binwidth=.125, alpha=.5, position="identity") +
geom_vline(data=mean_dat, aes(xintercept=ci.mean, colour=region),
linetype="dashed", size=1) +
xlab('category tuning index') +
ylab('number of neurons')
str(c('LIP, p-value ', t.test(lip_ci)$p.value))
str(c('MT, p-value ', t.test(mt_ci)$p.value))
lip2_neuron_folder <- '../data/LIP2/'
category_bound2 <- ensure_angle(category_bound + 90)
lip2_ci_perp <- get_ci_dist(lip2_neuron_folder, category_bound,
count_start + stim_onset,
count_end + stim_onset)
lip2_ci_cong <- get_ci_dist(lip2_neuron_folder, category_bound2,
count_start + stim_onset,
count_end + stim_onset)
d <- data.frame(region=factor(c(rep("LIP2 perp", length(lip2_ci_perp)),
rep("LIP2 cong", length(lip2_ci_cong)))),
ci=c(lip2_ci_perp, lip2_ci_cong))
mean_dat <- ddply(d, "region", summarise, ci.mean=mean(ci))
ggplot(d, aes(x=ci, fill=region)) +
geom_histogram(binwidth=.125, alpha=.5, position="identity") +
geom_vline(data=mean_dat, aes(xintercept=ci.mean, colour=region),
linetype="dashed", size=1) +
xlab('category tuning index') +
ylab('number of neurons')
str(c('LIP original bound, p-value ', t.test(lip2_ci_perp)$p.value))
str(c('LIP new bound, p-value ', t.test(lip2_ci_cong)$p.value))
knitr::opts_chunk$set(
eval      = TRUE,
comment   = "#",
results   = "hold",
# collapse  = TRUE,
fig.align = "center")
knitr::include_graphics("../figs/category_bounds.png")
knitr::include_graphics("../figs/task_schematic.png")
knitr::include_graphics("../figs/bhv_performance.png")
knitr::include_graphics("../figs/dv-lehky-sereno-dorsalonly.png")
knitr::include_graphics("../figs/action_potential.png")
library(rmatio)
mt_neuron_folder <- '../data/MT/'
mt_neuron_path <- '../data/MT/dseao01.mat'
mt_neuron <- read.mat(mt_neuron_path)
str(mt_neuron)
library(ggplot2)
# the stimulus starts 500ms after the beginning of each trial
stim_onset = 500
mt_raster <- mt_neuron[['trial_raster']]
# Find all the (time bin, trial) pairs in which there were spikes.
# We'll use the `which` function to find the values where the raster
# contains spikes (a value of '1' in the raster matrix), and we'll use
# `arr.ind` (which means 'array indices') to report back where in the
# matrix those values of '1' were found.
spkpairs = which(mt_raster == 1, arr.ind=TRUE)
qplot(spkpairs[ , 2] - stim_onset, spkpairs[ , 1],
xlab='time from stimulus onset (ms)',
ylab='trial')
dirs <- mt_neuron[['samp_direction_this_trial']]
unique_dirs <- unique(dirs)
print(unique_dirs)
choose_dir <- 240
dir_raster <- mt_raster[dirs == choose_dir,]
dir_spks <- which(dir_raster == 1, arr.ind=TRUE)
qplot(dir_spks[ , 2] - stim_onset, dir_spks[ , 1],
xlab='time from stimulus onset (ms)',
ylab='trial')
sort_dirs <- sort(dirs, index.return=TRUE)
order_inds <- sort_dirs$ix
s_dirs <- sort_dirs$x
ordered_raster <- mt_raster[order_inds, ]
sorted_spkpairs <- which(ordered_raster == 1, arr.ind=TRUE)
dfact <- factor(s_dirs[sorted_spkpairs[, 1]], levels=unique(s_dirs))
qplot(sorted_spkpairs[ , 2] - stim_onset, sorted_spkpairs[ , 1],
color=dfact, xlab='time from stimulus onset (ms)',
ylab='trial') +
labs(color='motion direction (degrees)')
read_neuron <- function(filename) {
neuron <- read.mat(filename)
name <- tail(strsplit(filename, '/')[[1]], n=1)
xs = 1:dim(neuron[['trial_raster']])[2]
dirs <- neuron[['samp_direction_this_trial']]
sort_dirs <- sort(dirs, index.return=TRUE)
order_inds <- sort_dirs$ix
dirs <- sort_dirs$x
udirs <- sort(unique(dirs))
raw_spks <- neuron[['trial_raster']]
spks <- ts(t(raw_spks[order_inds, ]), xs[1], xs[length(xs)],
frequency=1)
neur <- list(name=name, dirs=dirs, udirs=udirs, spks=spks)
neur
}
source('source_neuro_workshop_functions.R')
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size)
count_start <- 800
count_end <- 1200
get_direction_tuning(mt_neuron_path, count_start + stim_onset,
count_end + stim_onset)
category_bound <- 135
lip_neuron_folder <- '../data/LIP/'
lip_neuron_name <- 'dhbbg05.mat'
lip_neuron_path <- paste(lip_neuron_folder, lip_neuron_name,
sep='')
count_start <- 100
count_end <- 600
get_category_index(lip_neuron_path, category_bound,
count_start + stim_onset, count_end + stim_onset)
lip_ci <- get_ci_dist(lip_neuron_folder, category_bound,
count_start + stim_onset, count_end + stim_onset)
mt_ci <- get_ci_dist(mt_neuron_folder, category_bound,
count_start + stim_onset, count_end + stim_onset)
library(plyr)
d <- data.frame(region=factor(c(rep("LIP", length(lip_ci)),
rep("MT", length(mt_ci)))),
ci=c(lip_ci, mt_ci))
mean_dat <- ddply(d, "region", summarise, ci.mean=mean(ci))
ggplot(d, aes(x=ci, fill=region)) +
geom_histogram(binwidth=.125, alpha=.5, position="identity") +
geom_vline(data=mean_dat, aes(xintercept=ci.mean, colour=region),
linetype="dashed", size=1) +
xlab('category tuning index') +
ylab('number of neurons')
str(c('LIP, p-value ', t.test(lip_ci)$p.value))
str(c('MT, p-value ', t.test(mt_ci)$p.value))
lip2_neuron_folder <- '../data/LIP2/'
category_bound2 <- ensure_angle(category_bound + 90)
lip2_ci_perp <- get_ci_dist(lip2_neuron_folder, category_bound,
count_start + stim_onset,
count_end + stim_onset)
lip2_ci_cong <- get_ci_dist(lip2_neuron_folder, category_bound2,
count_start + stim_onset,
count_end + stim_onset)
d <- data.frame(region=factor(c(rep("LIP2 perp", length(lip2_ci_perp)),
rep("LIP2 cong", length(lip2_ci_cong)))),
ci=c(lip2_ci_perp, lip2_ci_cong))
mean_dat <- ddply(d, "region", summarise, ci.mean=mean(ci))
ggplot(d, aes(x=ci, fill=region)) +
geom_histogram(binwidth=.125, alpha=.5, position="identity") +
geom_vline(data=mean_dat, aes(xintercept=ci.mean, colour=region),
linetype="dashed", size=1) +
xlab('category tuning index') +
ylab('number of neurons')
str(c('LIP original bound, p-value ', t.test(lip2_ci_perp)$p.value))
str(c('LIP new bound, p-value ', t.test(lip2_ci_cong)$p.value))
dirs <- mt_neuron[['samp_direction_this_trial']]
unique_dirs <- unique(dirs)
print(unique_dirs)
choose_dir <- 240
dir_raster <- mt_raster[dirs == choose_dir,]
dir_spks <- which(dir_raster == 1, arr.ind=TRUE)
qplot(dir_spks[ , 2] - stim_onset, dir_spks[ , 1],
xlab='time from stimulus onset (ms)',
ylab='trial')
dirs <- mt_neuron[['samp_direction_this_trial']]
unique_dirs <- unique(dirs)
print(unique_dirs)
choose_dir <- 240
dir_raster <- mt_raster[dirs == choose_dir,]
dir_spks <- which(dir_raster == 1, arr.ind=TRUE)
qplot(dir_spks[ , 2] - stim_onset, dir_spks[ , 1],
xlab='time from stimulus onset (ms)',
ylab='trial')
dirs <- mt_neuron[['samp_direction_this_trial']]
unique_dirs <- unique(dirs)
print(unique_dirs)
choose_dir <- 240
dir_raster <- mt_raster[dirs == choose_dir,]
dir_spks <- which(dir_raster == 1, arr.ind=TRUE)
qplot(dir_spks[ , 2] - stim_onset, dir_spks[ , 1],
xlab='time from stimulus onset (ms)',
ylab='trial')
sort_dirs <- sort(dirs, index.return=TRUE)
order_inds <- sort_dirs$ix
s_dirs <- sort_dirs$x
ordered_raster <- mt_raster[order_inds, ]
sorted_spkpairs <- which(ordered_raster == 1, arr.ind=TRUE)
dfact <- factor(s_dirs[sorted_spkpairs[, 1]], levels=unique(s_dirs))
qplot(sorted_spkpairs[ , 2] - stim_onset, sorted_spkpairs[ , 1],
color=dfact, xlab='time from stimulus onset (ms)',
ylab='trial') +
labs(color='motion direction (degrees)')
source('source_neuro_workshop_functions.R')
source('~/BSD-QBio5/workshops/sepalmer/code/plot_PSTH_neuron.R')
source('~/BSD-QBio5/workshops/sepalmer/code/plot_PSTH_neuron.R')
source('source_neuro_workshop_functions.R')
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size)
source('~/BSD-QBio5/workshops/sepalmer/code/plot_PSTH_neuron.R')
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size)
source('~/BSD-QBio5/workshops/sepalmer/code/plot_PSTH_neuron.R')
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size)
source('~/BSD-QBio5/workshops/sepalmer/code/plot_PSTH_neuron.R')
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size)
source('~/BSD-QBio5/workshops/sepalmer/code/plot_PSTH_neuron.R')
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size)
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size,240)
source('~/BSD-QBio5/workshops/sepalmer/code/plot_PSTH_neuron.R')
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size,240)
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size,[0 240])
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size,[0 240])
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size,0)
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size,110)
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size,240)
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size,[[240 0]])
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size,240)
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size,c(0,240))
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size,240)
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size)
source('~/BSD-QBio5/workshops/sepalmer/code/plot_PSTH_neuron.R')
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size)
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size,240)
count_start <- 100
count_end <- 600
get_direction_tuning(mt_neuron_path, count_start + stim_onset,
count_end + stim_onset)
knitr::opts_chunk$set(
eval      = TRUE,
comment   = "#",
results   = "hold",
# collapse  = TRUE,
fig.align = "center")
knitr::include_graphics("../figs/category_bounds.png")
knitr::include_graphics("../figs/task_schematic.png")
knitr::include_graphics("../figs/bhv_performance.png")
knitr::include_graphics("../figs/dv-lehky-sereno-dorsalonly.png")
knitr::include_graphics("../figs/action_potential.png")
library(rmatio)
mt_neuron_folder <- '../data/MT/'
mt_neuron_path <- '../data/MT/dseao01.mat'
mt_neuron <- read.mat(mt_neuron_path)
str(mt_neuron)
library(ggplot2)
# the stimulus starts 500ms after the beginning of each trial
stim_onset = 500
mt_raster <- mt_neuron[['trial_raster']]
# Find all the (time bin, trial) pairs in which there were spikes.
# We'll use the `which` function to find the values where the raster
# contains spikes (a value of '1' in the raster matrix), and we'll use
# `arr.ind` (which means 'array indices') to report back where in the
# matrix those values of '1' were found.
spkpairs = which(mt_raster == 1, arr.ind=TRUE)
qplot(spkpairs[ , 2] - stim_onset, spkpairs[ , 1],
xlab='time from stimulus onset (ms)',
ylab='trial')
dirs <- mt_neuron[['samp_direction_this_trial']]
unique_dirs <- unique(dirs)
print(unique_dirs)
choose_dir <- 240
dir_raster <- mt_raster[dirs == choose_dir,]
dir_spks <- which(dir_raster == 1, arr.ind=TRUE)
qplot(dir_spks[ , 2] - stim_onset, dir_spks[ , 1],
xlab='time from stimulus onset (ms)',
ylab='trial')
sort_dirs <- sort(dirs, index.return=TRUE)
order_inds <- sort_dirs$ix
s_dirs <- sort_dirs$x
ordered_raster <- mt_raster[order_inds, ]
sorted_spkpairs <- which(ordered_raster == 1, arr.ind=TRUE)
dfact <- factor(s_dirs[sorted_spkpairs[, 1]], levels=unique(s_dirs))
qplot(sorted_spkpairs[ , 2] - stim_onset, sorted_spkpairs[ , 1],
color=dfact, xlab='time from stimulus onset (ms)',
ylab='trial') +
labs(color='motion direction (degrees)')
read_neuron <- function(filename) {
neuron <- read.mat(filename)
name <- tail(strsplit(filename, '/')[[1]], n=1)
xs = 1:dim(neuron[['trial_raster']])[2]
dirs <- neuron[['samp_direction_this_trial']]
sort_dirs <- sort(dirs, index.return=TRUE)
order_inds <- sort_dirs$ix
dirs <- sort_dirs$x
udirs <- sort(unique(dirs))
raw_spks <- neuron[['trial_raster']]
spks <- ts(t(raw_spks[order_inds, ]), xs[1], xs[length(xs)],
frequency=1)
neur <- list(name=name, dirs=dirs, udirs=udirs, spks=spks)
neur
}
source('source_neuro_workshop_functions.R')
filter_size <- 51
plot_PSTH_neuron(mt_neuron_path,filter_size,240)
count_start <- 100
count_end <- 600
get_direction_tuning(mt_neuron_path, count_start + stim_onset,
count_end + stim_onset)
category_bound <- 135
lip_neuron_folder <- '../data/LIP/'
lip_neuron_name <- 'dhbbg05.mat'
lip_neuron_path <- paste(lip_neuron_folder, lip_neuron_name,
sep='')
count_start <- 100
count_end <- 600
get_category_index(lip_neuron_path, category_bound,
count_start + stim_onset, count_end + stim_onset)
lip_ci <- get_ci_dist(lip_neuron_folder, category_bound,
count_start + stim_onset, count_end + stim_onset)
mt_ci <- get_ci_dist(mt_neuron_folder, category_bound,
count_start + stim_onset, count_end + stim_onset)
library(plyr)
d <- data.frame(region=factor(c(rep("LIP", length(lip_ci)),
rep("MT", length(mt_ci)))),
ci=c(lip_ci, mt_ci))
mean_dat <- ddply(d, "region", summarise, ci.mean=mean(ci))
ggplot(d, aes(x=ci, fill=region)) +
geom_histogram(binwidth=.125, alpha=.5, position="identity") +
geom_vline(data=mean_dat, aes(xintercept=ci.mean, colour=region),
linetype="dashed", size=1) +
xlab('category tuning index') +
ylab('number of neurons')
str(c('LIP, p-value ', t.test(lip_ci)$p.value))
str(c('MT, p-value ', t.test(mt_ci)$p.value))
lip2_neuron_folder <- '../data/LIP2/'
category_bound2 <- ensure_angle(category_bound + 90)
lip2_ci_perp <- get_ci_dist(lip2_neuron_folder, category_bound,
count_start + stim_onset,
count_end + stim_onset)
lip2_ci_cong <- get_ci_dist(lip2_neuron_folder, category_bound2,
count_start + stim_onset,
count_end + stim_onset)
d <- data.frame(region=factor(c(rep("LIP2 perp", length(lip2_ci_perp)),
rep("LIP2 cong", length(lip2_ci_cong)))),
ci=c(lip2_ci_perp, lip2_ci_cong))
mean_dat <- ddply(d, "region", summarise, ci.mean=mean(ci))
ggplot(d, aes(x=ci, fill=region)) +
geom_histogram(binwidth=.125, alpha=.5, position="identity") +
geom_vline(data=mean_dat, aes(xintercept=ci.mean, colour=region),
linetype="dashed", size=1) +
xlab('category tuning index') +
ylab('number of neurons')
str(c('LIP original bound, p-value ', t.test(lip2_ci_perp)$p.value))
str(c('LIP new bound, p-value ', t.test(lip2_ci_cong)$p.value))
